specVersion: 0.0.8
description: Indexer for all Phuture index products
repository: https://github.com/Phuture-Finance/phuture-global-subgraph
schema:
  file: ./schema.graphql
dataSources:
{{#v1}}
  - kind: ethereum
    name: IndexFactoryV1
    network: {{network}}
    context:
      chainID:
        type: BigInt
        data: "{{chainID}}"
    source:
      address: "{{indexFactory.address}}"
      abi: IndexFactoryV1
      startBlock: {{indexFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Index
        - IndexAsset
        - Asset
      abis:
        - name: IndexFactoryV1
          file: ./abis/v1/IndexFactory.json
        - name: IndexTokenV1
          file: ./abis/v1/IndexToken.json
        - name: IndexRegistry
          file: ./abis/v1/IndexRegistry.json
        - name: FeePool
          file: ./abis/v1/feePool.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: MakerERC20
          file: ./abis/v1/MakerERC20.json
        - name: VaultFactory
          file: ./abis/v1/VaultFactory.json
      eventHandlers:
        - event: ManagedIndexCreated(address,address[],uint8[])
          handler: handleManagedIndexCreated
      file: ./src/v1/IndexFactory.ts
{{/v1}}
{{#v2}}
  - kind: ethereum
    name: IndexFactoryV2
    network: {{network}}
    context:
      chainID:
        type: BigInt
        data: "{{chainID}}"
      nativeAsset:
        type: List
        data:
          - type: String
            data: "{{indexFactory.nativeAsset.name}}"
          - type: String
            data: "{{indexFactory.nativeAsset.symbol}}"
          - type: Int
            data: {{indexFactory.nativeAsset.decimals}}
    source:
      address: "{{indexFactory.address}}"
      abi: IndexFactoryV2
      startBlock: {{indexFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Index
      abis:
        - name: IndexFactoryV2
          file: ./abis/v2/IndexFactory.json
        - name: IndexTokenV2
          file: ./abis/v2/IndexToken.json
        - name: Governance
          file: ./abis/v2/Governance.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: MakerERC20
          file: ./abis/v1/MakerERC20.json
      eventHandlers:
        - event: Deployed(address,string,string,address,address)
          handler: handleIndexDeployed
      file: ./src/v2/IndexFactory.ts
{{/v2}}
{{#ephtr}}
  - kind: ethereum
    name: ephtr
    network: {{network}}
    context:
      chainID:
        type: BigInt
        data: "{{chainID}}"
      phtrAddress:
        type: Bytes
        data: "0xE1Fc4455f62a6E89476f1072530C20CF1A0622dA"
      emissionsAddress:
        type: Bytes
        data: "0x4819CecF672177F37e5450Fa6DC78d9BaAfa74be"
    source:
      address: "0x3b9805E163b3750e7f13a26B06F030f2d3b799F5"
      abi: ERC20
      startBlock: 12561997
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Index
        - Asset
        - IndexAsset
        - Account
        - IndexAccount
      abis:
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Emissions
          file: ./abis/Emissions.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      blockHandlers:
        - handler: ephtrBlockHandler
          filter:
            kind: polling
            every: 5000
      file: ./src/Ephtr.ts
{{/ephtr}}
{{#savingsVaults}}
  - kind: ethereum
    name: {{name}}
    network: {{network}}
    context:
      chainID:
        type: BigInt
        data: "{{chainID}}"
      vaultAsset:
        type: Bytes
        data: "{{vaultAsset}}"
      viewAddress:
        type: Bytes
        data: "{{viewAddress}}"
      chainlinkFeedRegistryAddress:
        type: Bytes
        data: "{{chainlinkFeedRegistryAddress}}"
    source:
      address: "{{address}}"
      abi: SavingsVault
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Index
        - Asset
        - IndexAsset
        - Account
        - IndexAccount
      abis:
        - name: SavingsVault
          file: ./abis/v1/SavingsVault.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: ChainlinkFeedRegistry
          file: ./abis/v1/ChainlinkFeedRegistry.json    
        - name: SavingsVaultViews
          file: ./abis/v1/SavingsVaultViews.json
        - name: MakerERC20
          file: ./abis/v1/MakerERC20.json
      eventHandlers:
        - event: Deposit(indexed address,indexed address,uint256,uint256)
          handler: handleDeposit
        - event: FCashMinted(indexed address,uint256,uint256)
          handler: handleFCashMinted
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: Upgraded(indexed address)
          handler: handleUpgraded
        - event: Withdraw(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleWithdraw
      blockHandlers:
        - handler: SavingsVaultBlockHandler
          filter:
            kind: polling
            every: 5000
      file: ./src/v1/SavingsVault.ts
{{/savingsVaults}}
templates:
{{#v1}}
  - kind: ethereum
    name: Vault
    network: {{network}}
    source:
      abi: Vault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - IndexAsset
        - Index
        - HistoricalIndexBalances
      abis:
        - name: Vault
          file: ./abis/v1/Vault.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: MakerERC20
          file: ./abis/v1/MakerERC20.json
      eventHandlers:
        - event: VTokenTransfer(indexed address,indexed address,uint256)
          handler: handleVTokenTransfer
      file: ./src/v1/Vault.ts
  - kind: ethereum
    name: IndexTokenV1
    network: {{network}}
    source:
      abi: IndexTokenV1
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Index
        - Account
        - Asset
        - IndexAsset
      abis:
        - name: IndexTokenV1
          file: ./abis/v1/IndexToken.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: MakerERC20
          file: ./abis/v1/MakerERC20.json
      eventHandlers:
        - event: AssetRemoved(address)
          handler: handleAssetRemoved
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
        - event: UpdateAnatomy(address,uint8)
          handler: handleUpdateAnatomy
      file: ./src/v1/IndexToken.ts
  - kind: ethereum
    name: VaultFactory
    network: {{network}}
    source:
      abi: VaultFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - IndexAsset
        - Asset
      abis:
        - name: VaultFactory
          file: ./abis/v1/VaultFactory.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: VTokenCreated(address,address)
          handler: handleVTokenCreated
      file: ./src/v1/VaultFactory.ts
  - kind: ethereum
    name: FeePool
    network: {{network}}
    source:
      abi: FeePool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - SetAUMScaledPerSecondsRate
        - SetBurningFeeInBP
        - SetMintingFeeInBP
      abis:
        - name: FeePool
          file: ./abis/v1/FeePool.json
      eventHandlers:
        - event: SetAUMScaledPerSecondsRate(indexed address,indexed address,uint256)
          handler: handleSetAUMScaledPerSecondsRate
        - event: SetBurningFeeInBP(indexed address,indexed address,uint16)
          handler: handleSetBurningFeeInBP
        - event: SetMintingFeeInBP(indexed address,indexed address,uint16)
          handler: handleSetMintingFeeInBP
      file: ./src/v1/FeePool.ts
  - kind: ethereum
    name: IndexRegistry
    network: {{network}}
    source:
      abi: IndexRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Index
      abis:
        - name: IndexRegistry
          file: ./abis/v1/IndexRegistry.json
      eventHandlers:
        - event: SetFeePool(indexed address,address)
          handler: handleSetFeePool
      file: ./src/v1/IndexRegistry.ts
{{/v1}}
{{#v2}}
  - kind: ethereum
    name: IndexTokenV2
    network: {{network}}
    source:
      abi: IndexTokenV2
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - IndexAsset
        - Index
        - HistoricalIndexBalances
      abis:
        - name: IndexTokenV2
          file: ./abis/v2/IndexToken.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: MakerERC20
          file: ./abis/v1/MakerERC20.json
      eventHandlers:
        - event: Deposit(indexed address,indexed address,uint256,uint256)
          handler: handleDeposit
        - event: Withdraw(indexed address,indexed address,indexed address,uint256,uint256,uint256)
          handler: handleWithdraw
        - event: FeeAccrued(uint96,uint96)
          handler: handleFeeAccrued
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
      file: ./src/v2/IndexToken.ts
  - kind: ethereum
    name: ConfigBuilder
    network: {{network}}
    source:
      abi: ConfigBuilder
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities: 
        - Index
        - IndexAsset
      abis: 
        - name: ConfigBuilder
          file: ./abis/v2/ConfigBuilder.json
      eventHandlers:
        - event: ConfigUpdated(bytes)
          handler: handleConfigUpdate
        - event: CurrencyRegistered(uint256,address,uint256,string,string,uint8)
          handler: handleCurrencyRegistered
        - event: FinishChainRebalancing(uint256,uint256,uint256[],uint256[])
          handler: handleFinishChainRebalancing
        - event: RegisterChain(uint256,uint256)
          handler: handleRegisterChain
      file: ./src/v2/ConfigBuilder.ts
  - kind: ethereum
    name: Governance
    network: {{network}}
    source:
      abi: Governance
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities: 
        - Index
        - IndexAsset
      abis: 
        - name: Governance
          file: ./abis/v2/Governance.json
      eventHandlers:
        - event: SetConfigBuilder(address)
          handler: handleSetConfigBuilder
      file: ./src/v2/Governance.ts
{{/v2}}
    



