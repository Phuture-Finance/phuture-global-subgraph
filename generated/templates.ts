// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  Address,
  DataSourceTemplate,
  DataSourceContext
} from "@graphprotocol/graph-ts";

export class Vault extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Vault", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext("Vault", [address.toHex()], context);
  }
}

export class IndexTokenV1 extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("IndexTokenV1", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "IndexTokenV1",
      [address.toHex()],
      context
    );
  }
}

export class VaultFactory extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("VaultFactory", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "VaultFactory",
      [address.toHex()],
      context
    );
  }
}

export class FeePool extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("FeePool", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext("FeePool", [address.toHex()], context);
  }
}

export class IndexRegistry extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("IndexRegistry", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "IndexRegistry",
      [address.toHex()],
      context
    );
  }
}

export class IndexTokenV2 extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("IndexTokenV2", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "IndexTokenV2",
      [address.toHex()],
      context
    );
  }
}

export class ConfigBuilder extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("ConfigBuilder", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "ConfigBuilder",
      [address.toHex()],
      context
    );
  }
}

export class Governance extends DataSourceTemplate {
  static create(address: Address): void {
    DataSourceTemplate.create("Governance", [address.toHex()]);
  }

  static createWithContext(address: Address, context: DataSourceContext): void {
    DataSourceTemplate.createWithContext(
      "Governance",
      [address.toHex()],
      context
    );
  }
}
