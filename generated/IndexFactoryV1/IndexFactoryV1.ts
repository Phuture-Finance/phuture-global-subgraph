// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ManagedIndexCreated extends ethereum.Event {
  get params(): ManagedIndexCreated__Params {
    return new ManagedIndexCreated__Params(this);
  }
}

export class ManagedIndexCreated__Params {
  _event: ManagedIndexCreated;

  constructor(event: ManagedIndexCreated) {
    this._event = event;
  }

  get index(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _assets(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }

  get _weights(): Array<i32> {
    return this._event.parameters[2].value.toI32Array();
  }
}

export class SetDefaultAUMScaledPerSecondsRate extends ethereum.Event {
  get params(): SetDefaultAUMScaledPerSecondsRate__Params {
    return new SetDefaultAUMScaledPerSecondsRate__Params(this);
  }
}

export class SetDefaultAUMScaledPerSecondsRate__Params {
  _event: SetDefaultAUMScaledPerSecondsRate;

  constructor(event: SetDefaultAUMScaledPerSecondsRate) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get AUMScaledPerSecondsRate(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SetDefaultBurningFeeInBP extends ethereum.Event {
  get params(): SetDefaultBurningFeeInBP__Params {
    return new SetDefaultBurningFeeInBP__Params(this);
  }
}

export class SetDefaultBurningFeeInBP__Params {
  _event: SetDefaultBurningFeeInBP;

  constructor(event: SetDefaultBurningFeeInBP) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get burningFeeInBP(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class SetDefaultMintingFeeInBP extends ethereum.Event {
  get params(): SetDefaultMintingFeeInBP__Params {
    return new SetDefaultMintingFeeInBP__Params(this);
  }
}

export class SetDefaultMintingFeeInBP__Params {
  _event: SetDefaultMintingFeeInBP;

  constructor(event: SetDefaultMintingFeeInBP) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get mintingFeeInBP(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class SetVTokenFactory extends ethereum.Event {
  get params(): SetVTokenFactory__Params {
    return new SetVTokenFactory__Params(this);
  }
}

export class SetVTokenFactory__Params {
  _event: SetVTokenFactory;

  constructor(event: SetVTokenFactory) {
    this._event = event;
  }

  get vTokenFactory(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class IndexFactoryV1__createIndexInput_nameDetailsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }
}

export class IndexFactoryV1 extends ethereum.SmartContract {
  static bind(address: Address): IndexFactoryV1 {
    return new IndexFactoryV1("IndexFactoryV1", address);
  }

  MAX_AUM_FEE(): BigInt {
    let result = super.call("MAX_AUM_FEE", "MAX_AUM_FEE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_AUM_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("MAX_AUM_FEE", "MAX_AUM_FEE():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  MAX_FEE_IN_BP(): BigInt {
    let result = super.call("MAX_FEE_IN_BP", "MAX_FEE_IN_BP():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MAX_FEE_IN_BP(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MAX_FEE_IN_BP",
      "MAX_FEE_IN_BP():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createIndex(
    _assets: Array<Address>,
    _weights: Array<i32>,
    _nameDetails: IndexFactoryV1__createIndexInput_nameDetailsStruct
  ): Address {
    let result = super.call(
      "createIndex",
      "createIndex(address[],uint8[],(string,string)):(address)",
      [
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromI32Array(_weights),
        ethereum.Value.fromTuple(_nameDetails)
      ]
    );

    return result[0].toAddress();
  }

  try_createIndex(
    _assets: Array<Address>,
    _weights: Array<i32>,
    _nameDetails: IndexFactoryV1__createIndexInput_nameDetailsStruct
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createIndex",
      "createIndex(address[],uint8[],(string,string)):(address)",
      [
        ethereum.Value.fromAddressArray(_assets),
        ethereum.Value.fromI32Array(_weights),
        ethereum.Value.fromTuple(_nameDetails)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  defaultAUMScaledPerSecondsRate(): BigInt {
    let result = super.call(
      "defaultAUMScaledPerSecondsRate",
      "defaultAUMScaledPerSecondsRate():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_defaultAUMScaledPerSecondsRate(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "defaultAUMScaledPerSecondsRate",
      "defaultAUMScaledPerSecondsRate():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  defaultBurningFeeInBP(): i32 {
    let result = super.call(
      "defaultBurningFeeInBP",
      "defaultBurningFeeInBP():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_defaultBurningFeeInBP(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "defaultBurningFeeInBP",
      "defaultBurningFeeInBP():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  defaultMintingFeeInBP(): i32 {
    let result = super.call(
      "defaultMintingFeeInBP",
      "defaultMintingFeeInBP():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_defaultMintingFeeInBP(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "defaultMintingFeeInBP",
      "defaultMintingFeeInBP():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  registry(): Address {
    let result = super.call("registry", "registry():(address)", []);

    return result[0].toAddress();
  }

  try_registry(): ethereum.CallResult<Address> {
    let result = super.tryCall("registry", "registry():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reweightingLogic(): Address {
    let result = super.call(
      "reweightingLogic",
      "reweightingLogic():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_reweightingLogic(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "reweightingLogic",
      "reweightingLogic():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  vTokenFactory(): Address {
    let result = super.call("vTokenFactory", "vTokenFactory():(address)", []);

    return result[0].toAddress();
  }

  try_vTokenFactory(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "vTokenFactory",
      "vTokenFactory():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _registry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _vTokenFactory(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _reweightingLogic(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _defaultMintingFeeInBP(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _defaultBurningFeeInBP(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get _defaultAUMScaledPerSecondsRate(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateIndexCall extends ethereum.Call {
  get inputs(): CreateIndexCall__Inputs {
    return new CreateIndexCall__Inputs(this);
  }

  get outputs(): CreateIndexCall__Outputs {
    return new CreateIndexCall__Outputs(this);
  }
}

export class CreateIndexCall__Inputs {
  _call: CreateIndexCall;

  constructor(call: CreateIndexCall) {
    this._call = call;
  }

  get _assets(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _weights(): Array<i32> {
    return this._call.inputValues[1].value.toI32Array();
  }

  get _nameDetails(): CreateIndexCall_nameDetailsStruct {
    return changetype<CreateIndexCall_nameDetailsStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }
}

export class CreateIndexCall__Outputs {
  _call: CreateIndexCall;

  constructor(call: CreateIndexCall) {
    this._call = call;
  }

  get index(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class CreateIndexCall_nameDetailsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }
}

export class SetDefaultAUMScaledPerSecondsRateCall extends ethereum.Call {
  get inputs(): SetDefaultAUMScaledPerSecondsRateCall__Inputs {
    return new SetDefaultAUMScaledPerSecondsRateCall__Inputs(this);
  }

  get outputs(): SetDefaultAUMScaledPerSecondsRateCall__Outputs {
    return new SetDefaultAUMScaledPerSecondsRateCall__Outputs(this);
  }
}

export class SetDefaultAUMScaledPerSecondsRateCall__Inputs {
  _call: SetDefaultAUMScaledPerSecondsRateCall;

  constructor(call: SetDefaultAUMScaledPerSecondsRateCall) {
    this._call = call;
  }

  get _AUMScaledPerSecondsRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetDefaultAUMScaledPerSecondsRateCall__Outputs {
  _call: SetDefaultAUMScaledPerSecondsRateCall;

  constructor(call: SetDefaultAUMScaledPerSecondsRateCall) {
    this._call = call;
  }
}

export class SetDefaultBurningFeeInBPCall extends ethereum.Call {
  get inputs(): SetDefaultBurningFeeInBPCall__Inputs {
    return new SetDefaultBurningFeeInBPCall__Inputs(this);
  }

  get outputs(): SetDefaultBurningFeeInBPCall__Outputs {
    return new SetDefaultBurningFeeInBPCall__Outputs(this);
  }
}

export class SetDefaultBurningFeeInBPCall__Inputs {
  _call: SetDefaultBurningFeeInBPCall;

  constructor(call: SetDefaultBurningFeeInBPCall) {
    this._call = call;
  }

  get _burningFeeInBP(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetDefaultBurningFeeInBPCall__Outputs {
  _call: SetDefaultBurningFeeInBPCall;

  constructor(call: SetDefaultBurningFeeInBPCall) {
    this._call = call;
  }
}

export class SetDefaultMintingFeeInBPCall extends ethereum.Call {
  get inputs(): SetDefaultMintingFeeInBPCall__Inputs {
    return new SetDefaultMintingFeeInBPCall__Inputs(this);
  }

  get outputs(): SetDefaultMintingFeeInBPCall__Outputs {
    return new SetDefaultMintingFeeInBPCall__Outputs(this);
  }
}

export class SetDefaultMintingFeeInBPCall__Inputs {
  _call: SetDefaultMintingFeeInBPCall;

  constructor(call: SetDefaultMintingFeeInBPCall) {
    this._call = call;
  }

  get _mintingFeeInBP(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetDefaultMintingFeeInBPCall__Outputs {
  _call: SetDefaultMintingFeeInBPCall;

  constructor(call: SetDefaultMintingFeeInBPCall) {
    this._call = call;
  }
}

export class SetReweightingLogicCall extends ethereum.Call {
  get inputs(): SetReweightingLogicCall__Inputs {
    return new SetReweightingLogicCall__Inputs(this);
  }

  get outputs(): SetReweightingLogicCall__Outputs {
    return new SetReweightingLogicCall__Outputs(this);
  }
}

export class SetReweightingLogicCall__Inputs {
  _call: SetReweightingLogicCall;

  constructor(call: SetReweightingLogicCall) {
    this._call = call;
  }

  get _reweightingLogic(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetReweightingLogicCall__Outputs {
  _call: SetReweightingLogicCall;

  constructor(call: SetReweightingLogicCall) {
    this._call = call;
  }
}

export class WithdrawToFeePoolCall extends ethereum.Call {
  get inputs(): WithdrawToFeePoolCall__Inputs {
    return new WithdrawToFeePoolCall__Inputs(this);
  }

  get outputs(): WithdrawToFeePoolCall__Outputs {
    return new WithdrawToFeePoolCall__Outputs(this);
  }
}

export class WithdrawToFeePoolCall__Inputs {
  _call: WithdrawToFeePoolCall;

  constructor(call: WithdrawToFeePoolCall) {
    this._call = call;
  }

  get _index(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawToFeePoolCall__Outputs {
  _call: WithdrawToFeePoolCall;

  constructor(call: WithdrawToFeePoolCall) {
    this._call = call;
  }
}
