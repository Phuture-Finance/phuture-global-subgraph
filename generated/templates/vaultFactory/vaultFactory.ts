// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class VTokenCreated extends ethereum.Event {
  get params(): VTokenCreated__Params {
    return new VTokenCreated__Params(this);
  }
}

export class VTokenCreated__Params {
  _event: VTokenCreated;

  constructor(event: VTokenCreated) {
    this._event = event;
  }

  get vToken(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get asset(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class vaultFactory extends ethereum.SmartContract {
  static bind(address: Address): vaultFactory {
    return new vaultFactory("vaultFactory", address);
  }

  beacon(): Address {
    let result = super.call("beacon", "beacon():(address)", []);

    return result[0].toAddress();
  }

  try_beacon(): ethereum.CallResult<Address> {
    let result = super.tryCall("beacon", "beacon():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createdVTokenOf(_asset: Address): Address {
    let result = super.call(
      "createdVTokenOf",
      "createdVTokenOf(address):(address)",
      [ethereum.Value.fromAddress(_asset)]
    );

    return result[0].toAddress();
  }

  try_createdVTokenOf(_asset: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createdVTokenOf",
      "createdVTokenOf(address):(address)",
      [ethereum.Value.fromAddress(_asset)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  vTokenOf(param0: Address): Address {
    let result = super.call("vTokenOf", "vTokenOf(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_vTokenOf(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall("vTokenOf", "vTokenOf(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateVTokenCall extends ethereum.Call {
  get inputs(): CreateVTokenCall__Inputs {
    return new CreateVTokenCall__Inputs(this);
  }

  get outputs(): CreateVTokenCall__Outputs {
    return new CreateVTokenCall__Outputs(this);
  }
}

export class CreateVTokenCall__Inputs {
  _call: CreateVTokenCall;

  constructor(call: CreateVTokenCall) {
    this._call = call;
  }

  get _asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreateVTokenCall__Outputs {
  _call: CreateVTokenCall;

  constructor(call: CreateVTokenCall) {
    this._call = call;
  }
}

export class CreatedVTokenOfCall extends ethereum.Call {
  get inputs(): CreatedVTokenOfCall__Inputs {
    return new CreatedVTokenOfCall__Inputs(this);
  }

  get outputs(): CreatedVTokenOfCall__Outputs {
    return new CreatedVTokenOfCall__Outputs(this);
  }
}

export class CreatedVTokenOfCall__Inputs {
  _call: CreatedVTokenOfCall;

  constructor(call: CreatedVTokenOfCall) {
    this._call = call;
  }

  get _asset(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class CreatedVTokenOfCall__Outputs {
  _call: CreatedVTokenOfCall;

  constructor(call: CreatedVTokenOfCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _registry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _vTokenImpl(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class UpgradeBeaconToCall extends ethereum.Call {
  get inputs(): UpgradeBeaconToCall__Inputs {
    return new UpgradeBeaconToCall__Inputs(this);
  }

  get outputs(): UpgradeBeaconToCall__Outputs {
    return new UpgradeBeaconToCall__Outputs(this);
  }
}

export class UpgradeBeaconToCall__Inputs {
  _call: UpgradeBeaconToCall;

  constructor(call: UpgradeBeaconToCall) {
    this._call = call;
  }

  get _vTokenImpl(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeBeaconToCall__Outputs {
  _call: UpgradeBeaconToCall;

  constructor(call: UpgradeBeaconToCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
