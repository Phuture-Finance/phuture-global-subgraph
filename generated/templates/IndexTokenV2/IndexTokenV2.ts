// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Consume extends ethereum.Event {
  get params(): Consume__Params {
    return new Consume__Params(this);
  }
}

export class Consume__Params {
  _event: Consume;

  constructor(event: Consume) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CurrencyRegistered extends ethereum.Event {
  get params(): CurrencyRegistered__Params {
    return new CurrencyRegistered__Params(this);
  }
}

export class CurrencyRegistered__Params {
  _event: CurrencyRegistered;

  constructor(event: CurrencyRegistered) {
    this._event = event;
  }

  get param0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get param1(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get reserve(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get shares(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class Donate extends ethereum.Event {
  get params(): Donate__Params {
    return new Donate__Params(this);
  }
}

export class Donate__Params {
  _event: Donate;

  constructor(event: Donate) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FeeAccrued extends ethereum.Event {
  get params(): FeeAccrued__Params {
    return new FeeAccrued__Params(this);
  }
}

export class FeeAccrued__Params {
  _event: FeeAccrued;

  constructor(event: FeeAccrued) {
    this._event = event;
  }

  get baseFee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get AUMFee(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FeeSettled extends ethereum.Event {
  get params(): FeeSettled__Params {
    return new FeeSettled__Params(this);
  }
}

export class FeeSettled__Params {
  _event: FeeSettled;

  constructor(event: FeeSettled) {
    this._event = event;
  }

  get fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class FinishRebalancing extends ethereum.Event {
  get params(): FinishRebalancing__Params {
    return new FinishRebalancing__Params(this);
  }
}

export class FinishRebalancing__Params {
  _event: FinishRebalancing;

  constructor(event: FinishRebalancing) {
    this._event = event;
  }

  get snapshot(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get currencies(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Rebalance extends ethereum.Event {
  get params(): Rebalance__Params {
    return new Rebalance__Params(this);
  }
}

export class Rebalance__Params {
  _event: Rebalance;

  constructor(event: Rebalance) {
    this._event = event;
  }

  get sellCurrency(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get soldAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get buyCurrency(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get boughtAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReserveChange extends ethereum.Event {
  get params(): ReserveChange__Params {
    return new ReserveChange__Params(this);
  }
}

export class ReserveChange__Params {
  _event: ReserveChange;

  constructor(event: ReserveChange) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isPositive(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class SnapshotTransfer extends ethereum.Event {
  get params(): SnapshotTransfer__Params {
    return new SnapshotTransfer__Params(this);
  }
}

export class SnapshotTransfer__Params {
  _event: SnapshotTransfer;

  constructor(event: SnapshotTransfer) {
    this._event = event;
  }

  get snapshot(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get from(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class StartRebalancing extends ethereum.Event {
  get params(): StartRebalancing__Params {
    return new StartRebalancing__Params(this);
  }
}

export class StartRebalancing__Params {
  _event: StartRebalancing;

  constructor(event: StartRebalancing) {
    this._event = event;
  }

  get snapshot(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get withdrawals(): StartRebalancingWithdrawalsStruct {
    return changetype<StartRebalancingWithdrawalsStruct>(
      this._event.parameters[1].value.toTuple()
    );
  }
}

export class StartRebalancingWithdrawalsStruct extends ethereum.Tuple {
  get currencyIndexSet(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get snapshot(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get k(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get reserve(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class IndexTokenV2__finishRebalancingPhaseInputParamsStruct extends ethereum.Tuple {
  get anatomyCurrencies(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get newAnatomy(): IndexTokenV2__finishRebalancingPhaseInputParamsNewAnatomyStruct {
    return changetype<
      IndexTokenV2__finishRebalancingPhaseInputParamsNewAnatomyStruct
    >(this[1].toTuple());
  }

  get withdrawals(): IndexTokenV2__finishRebalancingPhaseInputParamsWithdrawalsStruct {
    return changetype<
      IndexTokenV2__finishRebalancingPhaseInputParamsWithdrawalsStruct
    >(this[2].toTuple());
  }

  get lastKBalance(): BigInt {
    return this[3].toBigInt();
  }

  get currencies(): Array<Address> {
    return this[4].toAddressArray();
  }
}

export class IndexTokenV2__finishRebalancingPhaseInputParamsNewAnatomyStruct extends ethereum.Tuple {
  get currencies(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get currencyIndexSet(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class IndexTokenV2__finishRebalancingPhaseInputParamsWithdrawalsStruct extends ethereum.Tuple {
  get currencyIndexSet(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class IndexTokenV2__infoResult {
  value0: BigInt;
  value1: Array<BigInt>;

  constructor(value0: BigInt, value1: Array<BigInt>) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }

  getK(): BigInt {
    return this.value0;
  }

  getCurrencies(): Array<BigInt> {
    return this.value1;
  }
}

export class IndexTokenV2__redeemResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class IndexTokenV2__redeemInputParamsStruct extends ethereum.Tuple {
  get config(): IndexTokenV2__redeemInputParamsConfigStruct {
    return changetype<IndexTokenV2__redeemInputParamsConfigStruct>(
      this[0].toTuple()
    );
  }

  get expectedInitialReserve(): BigInt {
    return this[1].toBigInt();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get shares(): BigInt {
    return this[3].toBigInt();
  }

  get payload(): Bytes {
    return this[4].toBytes();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }

  get snapshotRecipient(): Address {
    return this[6].toAddress();
  }

  get reserveUnchangedAssetCommands(): Array<
    IndexTokenV2__redeemInputParamsReserveUnchangedAssetCommandsStruct
  > {
    return this[7].toTupleArray<
      IndexTokenV2__redeemInputParamsReserveUnchangedAssetCommandsStruct
    >();
  }

  get reserveUnchangedReserveCommands(): Array<
    IndexTokenV2__redeemInputParamsReserveUnchangedReserveCommandsStruct
  > {
    return this[8].toTupleArray<
      IndexTokenV2__redeemInputParamsReserveUnchangedReserveCommandsStruct
    >();
  }

  get reserveChangedAssetCommands(): Array<
    IndexTokenV2__redeemInputParamsReserveChangedAssetCommandsStruct
  > {
    return this[9].toTupleArray<
      IndexTokenV2__redeemInputParamsReserveChangedAssetCommandsStruct
    >();
  }

  get reserveChangedReserveCommands(): Array<
    IndexTokenV2__redeemInputParamsReserveChangedReserveCommandsStruct
  > {
    return this[10].toTupleArray<
      IndexTokenV2__redeemInputParamsReserveChangedReserveCommandsStruct
    >();
  }
}

export class IndexTokenV2__redeemInputParamsConfigStruct extends ethereum.Tuple {
  get shared(): IndexTokenV2__redeemInputParamsConfigSharedStruct {
    return changetype<IndexTokenV2__redeemInputParamsConfigSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }

  get forwarder(): Address {
    return this[3].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class IndexTokenV2__redeemInputParamsConfigSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class IndexTokenV2__redeemInputParamsReserveUnchangedAssetCommandsStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class IndexTokenV2__redeemInputParamsReserveUnchangedReserveCommandsStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class IndexTokenV2__redeemInputParamsReserveChangedAssetCommandsStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class IndexTokenV2__redeemInputParamsReserveChangedReserveCommandsStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class IndexTokenV2 extends ethereum.SmartContract {
  static bind(address: Address): IndexTokenV2 {
    return new IndexTokenV2("IndexTokenV2", address);
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowance(param0: Address, param1: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBigInt();
  }

  try_allowance(param0: Address, param1: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(param0: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  finishRebalancingPhase(
    params: IndexTokenV2__finishRebalancingPhaseInputParamsStruct
  ): Bytes {
    let result = super.call(
      "finishRebalancingPhase",
      "finishRebalancingPhase((uint256[],(uint256[],uint256[]),(uint256[],uint96[]),uint256,address[])):(bytes32)",
      [ethereum.Value.fromTuple(params)]
    );

    return result[0].toBytes();
  }

  try_finishRebalancingPhase(
    params: IndexTokenV2__finishRebalancingPhaseInputParamsStruct
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "finishRebalancingPhase",
      "finishRebalancingPhase((uint256[],(uint256[],uint256[]),(uint256[],uint96[]),uint256,address[])):(bytes32)",
      [ethereum.Value.fromTuple(params)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  info(): IndexTokenV2__infoResult {
    let result = super.call("info", "info():(uint256,uint256[])", []);

    return new IndexTokenV2__infoResult(
      result[0].toBigInt(),
      result[1].toBigIntArray()
    );
  }

  try_info(): ethereum.CallResult<IndexTokenV2__infoResult> {
    let result = super.tryCall("info", "info():(uint256,uint256[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new IndexTokenV2__infoResult(
        value[0].toBigInt(),
        value[1].toBigIntArray()
      )
    );
  }

  kSelf(): BigInt {
    let result = super.call("kSelf", "kSelf():(uint256)", []);

    return result[0].toBigInt();
  }

  try_kSelf(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("kSelf", "kSelf():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  nonces(param0: Address): BigInt {
    let result = super.call("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_nonces(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  redeem(
    params: IndexTokenV2__redeemInputParamsStruct,
    forwardedSender: Address
  ): IndexTokenV2__redeemResult {
    let result = super.call(
      "redeem",
      "redeem((((uint256,uint256,bool,address,address),uint16,bool,address,uint256[]),uint256,address,uint128,bytes,address,address,(uint256,bytes[],uint256,uint256[])[],(uint256,bytes[],uint256,uint256[])[],(uint256,bytes[],uint256,uint256[])[],(uint256,bytes[],uint256,uint256[])[]),address):(uint256,uint256)",
      [
        ethereum.Value.fromTuple(params),
        ethereum.Value.fromAddress(forwardedSender)
      ]
    );

    return new IndexTokenV2__redeemResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_redeem(
    params: IndexTokenV2__redeemInputParamsStruct,
    forwardedSender: Address
  ): ethereum.CallResult<IndexTokenV2__redeemResult> {
    let result = super.tryCall(
      "redeem",
      "redeem((((uint256,uint256,bool,address,address),uint16,bool,address,uint256[]),uint256,address,uint128,bytes,address,address,(uint256,bytes[],uint256,uint256[])[],(uint256,bytes[],uint256,uint256[])[],(uint256,bytes[],uint256,uint256[])[],(uint256,bytes[],uint256,uint256[])[]),address):(uint256,uint256)",
      [
        ethereum.Value.fromTuple(params),
        ethereum.Value.fromAddress(forwardedSender)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new IndexTokenV2__redeemResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }

  reserve(): Address {
    let result = super.call("reserve", "reserve():(address)", []);

    return result[0].toAddress();
  }

  try_reserve(): ethereum.CallResult<Address> {
    let result = super.tryCall("reserve", "reserve():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reserveBalance(): BigInt {
    let result = super.call("reserveBalance", "reserveBalance():(uint96)", []);

    return result[0].toBigInt();
  }

  try_reserveBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reserveBalance",
      "reserveBalance():(uint96)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(to: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(to: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(to),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(from: Address, to: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    from: Address,
    to: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(from),
        ethereum.Value.fromAddress(to),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferLatestSnapshot(recipient: Address, kAmountWads: BigInt): BigInt {
    let result = super.call(
      "transferLatestSnapshot",
      "transferLatestSnapshot(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(kAmountWads)
      ]
    );

    return result[0].toBigInt();
  }

  try_transferLatestSnapshot(
    recipient: Address,
    kAmountWads: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "transferLatestSnapshot",
      "transferLatestSnapshot(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(kAmountWads)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _reserve(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _governance(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _messenger(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _maxDepositFeeInBPs(): i32 {
    return this._call.inputValues[5].value.toI32();
  }

  get _maxRedemptionFeeInBPs(): i32 {
    return this._call.inputValues[6].value.toI32();
  }

  get _maxAUMDilutionPerSecond(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AccrueFeeCall extends ethereum.Call {
  get inputs(): AccrueFeeCall__Inputs {
    return new AccrueFeeCall__Inputs(this);
  }

  get outputs(): AccrueFeeCall__Outputs {
    return new AccrueFeeCall__Outputs(this);
  }
}

export class AccrueFeeCall__Inputs {
  _call: AccrueFeeCall;

  constructor(call: AccrueFeeCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AccrueFeeCall__Outputs {
  _call: AccrueFeeCall;

  constructor(call: AccrueFeeCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class ConsumeCall extends ethereum.Call {
  get inputs(): ConsumeCall__Inputs {
    return new ConsumeCall__Inputs(this);
  }

  get outputs(): ConsumeCall__Outputs {
    return new ConsumeCall__Outputs(this);
  }
}

export class ConsumeCall__Inputs {
  _call: ConsumeCall;

  constructor(call: ConsumeCall) {
    this._call = call;
  }

  get currency(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get command(): ConsumeCallCommandStruct {
    return changetype<ConsumeCallCommandStruct>(
      this._call.inputValues[2].value.toTuple()
    );
  }

  get validator(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get packedConfig(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }
}

export class ConsumeCall__Outputs {
  _call: ConsumeCall;

  constructor(call: ConsumeCall) {
    this._call = call;
  }
}

export class ConsumeCallCommandStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }

  get params(): DepositCallParamsStruct {
    return changetype<DepositCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCallParamsStruct extends ethereum.Tuple {
  get config(): DepositCallParamsConfigStruct {
    return changetype<DepositCallParamsConfigStruct>(this[0].toTuple());
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get recipient(): Address {
    return this[2].toAddress();
  }

  get payload(): Bytes {
    return this[3].toBytes();
  }
}

export class DepositCallParamsConfigStruct extends ethereum.Tuple {
  get shared(): DepositCallParamsConfigSharedStruct {
    return changetype<DepositCallParamsConfigSharedStruct>(this[0].toTuple());
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class DepositCallParamsConfigSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class DepositWithCommandCall extends ethereum.Call {
  get inputs(): DepositWithCommandCall__Inputs {
    return new DepositWithCommandCall__Inputs(this);
  }

  get outputs(): DepositWithCommandCall__Outputs {
    return new DepositWithCommandCall__Outputs(this);
  }
}

export class DepositWithCommandCall__Inputs {
  _call: DepositWithCommandCall;

  constructor(call: DepositWithCommandCall) {
    this._call = call;
  }

  get params(): DepositWithCommandCallParamsStruct {
    return changetype<DepositWithCommandCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get callbackParams(): DepositWithCommandCallCallbackParamsStruct {
    return changetype<DepositWithCommandCallCallbackParamsStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class DepositWithCommandCall__Outputs {
  _call: DepositWithCommandCall;

  constructor(call: DepositWithCommandCall) {
    this._call = call;
  }
}

export class DepositWithCommandCallParamsStruct extends ethereum.Tuple {
  get config(): DepositWithCommandCallParamsConfigStruct {
    return changetype<DepositWithCommandCallParamsConfigStruct>(
      this[0].toTuple()
    );
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }

  get recipient(): Address {
    return this[2].toAddress();
  }

  get payload(): Bytes {
    return this[3].toBytes();
  }
}

export class DepositWithCommandCallParamsConfigStruct extends ethereum.Tuple {
  get shared(): DepositWithCommandCallParamsConfigSharedStruct {
    return changetype<DepositWithCommandCallParamsConfigSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class DepositWithCommandCallParamsConfigSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class DepositWithCommandCallCallbackParamsStruct extends ethereum.Tuple {
  get currency(): Address {
    return this[0].toAddress();
  }

  get command(): DepositWithCommandCallCallbackParamsCommandStruct {
    return changetype<DepositWithCommandCallCallbackParamsCommandStruct>(
      this[1].toTuple()
    );
  }
}

export class DepositWithCommandCallCallbackParamsCommandStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class DonateCall extends ethereum.Call {
  get inputs(): DonateCall__Inputs {
    return new DonateCall__Inputs(this);
  }

  get outputs(): DonateCall__Outputs {
    return new DonateCall__Outputs(this);
  }
}

export class DonateCall__Inputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }

  get currency(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class DonateCall__Outputs {
  _call: DonateCall;

  constructor(call: DonateCall) {
    this._call = call;
  }
}

export class FinishRebalancingPhaseCall extends ethereum.Call {
  get inputs(): FinishRebalancingPhaseCall__Inputs {
    return new FinishRebalancingPhaseCall__Inputs(this);
  }

  get outputs(): FinishRebalancingPhaseCall__Outputs {
    return new FinishRebalancingPhaseCall__Outputs(this);
  }
}

export class FinishRebalancingPhaseCall__Inputs {
  _call: FinishRebalancingPhaseCall;

  constructor(call: FinishRebalancingPhaseCall) {
    this._call = call;
  }

  get params(): FinishRebalancingPhaseCallParamsStruct {
    return changetype<FinishRebalancingPhaseCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class FinishRebalancingPhaseCall__Outputs {
  _call: FinishRebalancingPhaseCall;

  constructor(call: FinishRebalancingPhaseCall) {
    this._call = call;
  }

  get resultHash(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class FinishRebalancingPhaseCallParamsStruct extends ethereum.Tuple {
  get anatomyCurrencies(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get newAnatomy(): FinishRebalancingPhaseCallParamsNewAnatomyStruct {
    return changetype<FinishRebalancingPhaseCallParamsNewAnatomyStruct>(
      this[1].toTuple()
    );
  }

  get withdrawals(): FinishRebalancingPhaseCallParamsWithdrawalsStruct {
    return changetype<FinishRebalancingPhaseCallParamsWithdrawalsStruct>(
      this[2].toTuple()
    );
  }

  get lastKBalance(): BigInt {
    return this[3].toBigInt();
  }

  get currencies(): Array<Address> {
    return this[4].toAddressArray();
  }
}

export class FinishRebalancingPhaseCallParamsNewAnatomyStruct extends ethereum.Tuple {
  get currencies(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get currencyIndexSet(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class FinishRebalancingPhaseCallParamsWithdrawalsStruct extends ethereum.Tuple {
  get currencyIndexSet(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class PermitCall extends ethereum.Call {
  get inputs(): PermitCall__Inputs {
    return new PermitCall__Inputs(this);
  }

  get outputs(): PermitCall__Outputs {
    return new PermitCall__Outputs(this);
  }
}

export class PermitCall__Inputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }

  get owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get spender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get deadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get v(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get r(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get s(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }
}

export class PermitCall__Outputs {
  _call: PermitCall;

  constructor(call: PermitCall) {
    this._call = call;
  }
}

export class PrepareRebalancingCall extends ethereum.Call {
  get inputs(): PrepareRebalancingCall__Inputs {
    return new PrepareRebalancingCall__Inputs(this);
  }

  get outputs(): PrepareRebalancingCall__Outputs {
    return new PrepareRebalancingCall__Outputs(this);
  }
}

export class PrepareRebalancingCall__Inputs {
  _call: PrepareRebalancingCall;

  constructor(call: PrepareRebalancingCall) {
    this._call = call;
  }
}

export class PrepareRebalancingCall__Outputs {
  _call: PrepareRebalancingCall;

  constructor(call: PrepareRebalancingCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get params(): RedeemCallParamsStruct {
    return changetype<RedeemCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get forwardedSender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }

  get value1(): BigInt {
    return this._call.outputValues[1].value.toBigInt();
  }
}

export class RedeemCallParamsStruct extends ethereum.Tuple {
  get config(): RedeemCallParamsConfigStruct {
    return changetype<RedeemCallParamsConfigStruct>(this[0].toTuple());
  }

  get expectedInitialReserve(): BigInt {
    return this[1].toBigInt();
  }

  get owner(): Address {
    return this[2].toAddress();
  }

  get shares(): BigInt {
    return this[3].toBigInt();
  }

  get payload(): Bytes {
    return this[4].toBytes();
  }

  get recipient(): Address {
    return this[5].toAddress();
  }

  get snapshotRecipient(): Address {
    return this[6].toAddress();
  }

  get reserveUnchangedAssetCommands(): Array<
    RedeemCallParamsReserveUnchangedAssetCommandsStruct
  > {
    return this[7].toTupleArray<
      RedeemCallParamsReserveUnchangedAssetCommandsStruct
    >();
  }

  get reserveUnchangedReserveCommands(): Array<
    RedeemCallParamsReserveUnchangedReserveCommandsStruct
  > {
    return this[8].toTupleArray<
      RedeemCallParamsReserveUnchangedReserveCommandsStruct
    >();
  }

  get reserveChangedAssetCommands(): Array<
    RedeemCallParamsReserveChangedAssetCommandsStruct
  > {
    return this[9].toTupleArray<
      RedeemCallParamsReserveChangedAssetCommandsStruct
    >();
  }

  get reserveChangedReserveCommands(): Array<
    RedeemCallParamsReserveChangedReserveCommandsStruct
  > {
    return this[10].toTupleArray<
      RedeemCallParamsReserveChangedReserveCommandsStruct
    >();
  }
}

export class RedeemCallParamsConfigStruct extends ethereum.Tuple {
  get shared(): RedeemCallParamsConfigSharedStruct {
    return changetype<RedeemCallParamsConfigSharedStruct>(this[0].toTuple());
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }

  get forwarder(): Address {
    return this[3].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class RedeemCallParamsConfigSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class RedeemCallParamsReserveUnchangedAssetCommandsStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class RedeemCallParamsReserveUnchangedReserveCommandsStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class RedeemCallParamsReserveChangedAssetCommandsStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class RedeemCallParamsReserveChangedReserveCommandsStruct extends ethereum.Tuple {
  get target(): BigInt {
    return this[0].toBigInt();
  }

  get datas(): Array<Bytes> {
    return this[1].toBytesArray();
  }

  get flags(): BigInt {
    return this[2].toBigInt();
  }

  get packedConfigs(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class RegisterCurrenciesCall extends ethereum.Call {
  get inputs(): RegisterCurrenciesCall__Inputs {
    return new RegisterCurrenciesCall__Inputs(this);
  }

  get outputs(): RegisterCurrenciesCall__Outputs {
    return new RegisterCurrenciesCall__Outputs(this);
  }
}

export class RegisterCurrenciesCall__Inputs {
  _call: RegisterCurrenciesCall;

  constructor(call: RegisterCurrenciesCall) {
    this._call = call;
  }

  get currencies(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RegisterCurrenciesCall__Outputs {
  _call: RegisterCurrenciesCall;

  constructor(call: RegisterCurrenciesCall) {
    this._call = call;
  }

  get result(): RegisterCurrenciesCallResultStruct {
    return changetype<RegisterCurrenciesCallResultStruct>(
      this._call.outputValues[0].value.toTuple()
    );
  }
}

export class RegisterCurrenciesCallResultStruct extends ethereum.Tuple {
  get chainId(): BigInt {
    return this[0].toBigInt();
  }

  get metadata(): Array<RegisterCurrenciesCallResultMetadataStruct> {
    return this[1].toTupleArray<RegisterCurrenciesCallResultMetadataStruct>();
  }

  get currenciesHash(): Bytes {
    return this[2].toBytes();
  }
}

export class RegisterCurrenciesCallResultMetadataStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get currency(): Address {
    return this[2].toAddress();
  }

  get id(): BigInt {
    return this[3].toBigInt();
  }
}

export class SetConfigCall extends ethereum.Call {
  get inputs(): SetConfigCall__Inputs {
    return new SetConfigCall__Inputs(this);
  }

  get outputs(): SetConfigCall__Outputs {
    return new SetConfigCall__Outputs(this);
  }
}

export class SetConfigCall__Inputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get _depositConfig(): SetConfigCall_depositConfigStruct {
    return changetype<SetConfigCall_depositConfigStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }

  get _redemptionConfig(): SetConfigCall_redemptionConfigStruct {
    return changetype<SetConfigCall_redemptionConfigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class SetConfigCall__Outputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }
}

export class SetConfigCall_depositConfigStruct extends ethereum.Tuple {
  get shared(): SetConfigCall_depositConfigSharedStruct {
    return changetype<SetConfigCall_depositConfigSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class SetConfigCall_depositConfigSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class SetConfigCall_redemptionConfigStruct extends ethereum.Tuple {
  get shared(): SetConfigCall_redemptionConfigSharedStruct {
    return changetype<SetConfigCall_redemptionConfigSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }

  get forwarder(): Address {
    return this[3].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class SetConfigCall_redemptionConfigSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class SetMessengerCall extends ethereum.Call {
  get inputs(): SetMessengerCall__Inputs {
    return new SetMessengerCall__Inputs(this);
  }

  get outputs(): SetMessengerCall__Outputs {
    return new SetMessengerCall__Outputs(this);
  }
}

export class SetMessengerCall__Inputs {
  _call: SetMessengerCall;

  constructor(call: SetMessengerCall) {
    this._call = call;
  }

  get _messenger(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMessengerCall__Outputs {
  _call: SetMessengerCall;

  constructor(call: SetMessengerCall) {
    this._call = call;
  }
}

export class SetOrderBookCall extends ethereum.Call {
  get inputs(): SetOrderBookCall__Inputs {
    return new SetOrderBookCall__Inputs(this);
  }

  get outputs(): SetOrderBookCall__Outputs {
    return new SetOrderBookCall__Outputs(this);
  }
}

export class SetOrderBookCall__Inputs {
  _call: SetOrderBookCall;

  constructor(call: SetOrderBookCall) {
    this._call = call;
  }

  get _orderBook(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOrderBookCall__Outputs {
  _call: SetOrderBookCall;

  constructor(call: SetOrderBookCall) {
    this._call = call;
  }
}

export class StartRebalancingPhaseCall extends ethereum.Call {
  get inputs(): StartRebalancingPhaseCall__Inputs {
    return new StartRebalancingPhaseCall__Inputs(this);
  }

  get outputs(): StartRebalancingPhaseCall__Outputs {
    return new StartRebalancingPhaseCall__Outputs(this);
  }
}

export class StartRebalancingPhaseCall__Inputs {
  _call: StartRebalancingPhaseCall;

  constructor(call: StartRebalancingPhaseCall) {
    this._call = call;
  }

  get withdrawals(): StartRebalancingPhaseCallWithdrawalsStruct {
    return changetype<StartRebalancingPhaseCallWithdrawalsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class StartRebalancingPhaseCall__Outputs {
  _call: StartRebalancingPhaseCall;

  constructor(call: StartRebalancingPhaseCall) {
    this._call = call;
  }
}

export class StartRebalancingPhaseCallWithdrawalsStruct extends ethereum.Tuple {
  get currencyIndexSet(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get amounts(): Array<BigInt> {
    return this[1].toBigIntArray();
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferLatestSnapshotCall extends ethereum.Call {
  get inputs(): TransferLatestSnapshotCall__Inputs {
    return new TransferLatestSnapshotCall__Inputs(this);
  }

  get outputs(): TransferLatestSnapshotCall__Outputs {
    return new TransferLatestSnapshotCall__Outputs(this);
  }
}

export class TransferLatestSnapshotCall__Inputs {
  _call: TransferLatestSnapshotCall;

  constructor(call: TransferLatestSnapshotCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get kAmountWads(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferLatestSnapshotCall__Outputs {
  _call: TransferLatestSnapshotCall;

  constructor(call: TransferLatestSnapshotCall) {
    this._call = call;
  }

  get snapshot(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get snapshot(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get kAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get recipient(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
