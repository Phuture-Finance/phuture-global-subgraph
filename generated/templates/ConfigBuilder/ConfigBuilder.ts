// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ConfigUpdated extends ethereum.Event {
  get params(): ConfigUpdated__Params {
    return new ConfigUpdated__Params(this);
  }
}

export class ConfigUpdated__Params {
  _event: ConfigUpdated;

  constructor(event: ConfigUpdated) {
    this._event = event;
  }

  get param0(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }
}

export class CurrenciesUpdate extends ethereum.Event {
  get params(): CurrenciesUpdate__Params {
    return new CurrenciesUpdate__Params(this);
  }
}

export class CurrenciesUpdate__Params {
  _event: CurrenciesUpdate;

  constructor(event: CurrenciesUpdate) {
    this._event = event;
  }

  get chainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get currenciesHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class CurrencyRegistered extends ethereum.Event {
  get params(): CurrencyRegistered__Params {
    return new CurrencyRegistered__Params(this);
  }
}

export class CurrencyRegistered__Params {
  _event: CurrencyRegistered;

  constructor(event: CurrencyRegistered) {
    this._event = event;
  }

  get chainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get currency(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get currencyId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[3].value.toString();
  }

  get symbol(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class FinishChainRebalancing extends ethereum.Event {
  get params(): FinishChainRebalancing__Params {
    return new FinishChainRebalancing__Params(this);
  }
}

export class FinishChainRebalancing__Params {
  _event: FinishChainRebalancing;

  constructor(event: FinishChainRebalancing) {
    this._event = event;
  }

  get chainIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get snapshot(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get currencyIdSet(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get currencies(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class ReceiveChainResult extends ethereum.Event {
  get params(): ReceiveChainResult__Params {
    return new ReceiveChainResult__Params(this);
  }
}

export class ReceiveChainResult__Params {
  _event: ReceiveChainResult;

  constructor(event: ReceiveChainResult) {
    this._event = event;
  }

  get chainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get chainIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get resultHash(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RegisterChain extends ethereum.Event {
  get params(): RegisterChain__Params {
    return new RegisterChain__Params(this);
  }
}

export class RegisterChain__Params {
  _event: RegisterChain;

  constructor(event: RegisterChain) {
    this._event = event;
  }

  get chainId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get chainIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class StartRebalancing extends ethereum.Event {
  get params(): StartRebalancing__Params {
    return new StartRebalancing__Params(this);
  }
}

export class StartRebalancing__Params {
  _event: StartRebalancing;

  constructor(event: StartRebalancing) {
    this._event = event;
  }

  get pendingChainIdSet(): Array<BigInt> {
    return this._event.parameters[0].value.toBigIntArray();
  }
}

export class ConfigBuilder__configsResultDepositStruct extends ethereum.Tuple {
  get shared(): ConfigBuilder__configsResultDepositSharedStruct {
    return changetype<ConfigBuilder__configsResultDepositSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class ConfigBuilder__configsResultDepositSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class ConfigBuilder__configsResultRedemptionStruct extends ethereum.Tuple {
  get shared(): ConfigBuilder__configsResultRedemptionSharedStruct {
    return changetype<ConfigBuilder__configsResultRedemptionSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }

  get forwarder(): Address {
    return this[3].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class ConfigBuilder__configsResultRedemptionSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class ConfigBuilder__configsResult {
  value0: ConfigBuilder__configsResultDepositStruct;
  value1: ConfigBuilder__configsResultRedemptionStruct;

  constructor(
    value0: ConfigBuilder__configsResultDepositStruct,
    value1: ConfigBuilder__configsResultRedemptionStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getDeposit(): ConfigBuilder__configsResultDepositStruct {
    return this.value0;
  }

  getRedemption(): ConfigBuilder__configsResultRedemptionStruct {
    return this.value1;
  }
}

export class ConfigBuilder__configsInputConfigStruct extends ethereum.Tuple {
  get shared(): ConfigBuilder__configsInputConfigSharedStruct {
    return changetype<ConfigBuilder__configsInputConfigSharedStruct>(
      this[0].toTuple()
    );
  }

  get deposit(): ConfigBuilder__configsInputConfigDepositStruct {
    return changetype<ConfigBuilder__configsInputConfigDepositStruct>(
      this[1].toTuple()
    );
  }

  get redemption(): ConfigBuilder__configsInputConfigRedemptionStruct {
    return changetype<ConfigBuilder__configsInputConfigRedemptionStruct>(
      this[2].toTuple()
    );
  }
}

export class ConfigBuilder__configsInputConfigSharedStruct extends ethereum.Tuple {
  get AUMDilutionPerSecond(): BigInt {
    return this[0].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[1].toBoolean();
  }

  get metadata(): Address {
    return this[2].toAddress();
  }
}

export class ConfigBuilder__configsInputConfigDepositStruct extends ethereum.Tuple {
  get feeBPs(): i32 {
    return this[0].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[1].toBoolean();
  }
}

export class ConfigBuilder__configsInputConfigRedemptionStruct extends ethereum.Tuple {
  get forwarder(): Address {
    return this[0].toAddress();
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class ConfigBuilder__finishRebalancingResultDepositStruct extends ethereum.Tuple {
  get shared(): ConfigBuilder__finishRebalancingResultDepositSharedStruct {
    return changetype<
      ConfigBuilder__finishRebalancingResultDepositSharedStruct
    >(this[0].toTuple());
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class ConfigBuilder__finishRebalancingResultDepositSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class ConfigBuilder__finishRebalancingResultRedemptionStruct extends ethereum.Tuple {
  get shared(): ConfigBuilder__finishRebalancingResultRedemptionSharedStruct {
    return changetype<
      ConfigBuilder__finishRebalancingResultRedemptionSharedStruct
    >(this[0].toTuple());
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }

  get forwarder(): Address {
    return this[3].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class ConfigBuilder__finishRebalancingResultRedemptionSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class ConfigBuilder__finishRebalancingResult {
  value0: ConfigBuilder__finishRebalancingResultDepositStruct;
  value1: ConfigBuilder__finishRebalancingResultRedemptionStruct;

  constructor(
    value0: ConfigBuilder__finishRebalancingResultDepositStruct,
    value1: ConfigBuilder__finishRebalancingResultRedemptionStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getDeposit(): ConfigBuilder__finishRebalancingResultDepositStruct {
    return this.value0;
  }

  getRedemption(): ConfigBuilder__finishRebalancingResultRedemptionStruct {
    return this.value1;
  }
}

export class ConfigBuilder__finishRebalancingInputResultsStruct extends ethereum.Tuple {
  get chainId(): BigInt {
    return this[0].toBigInt();
  }

  get snapshot(): BigInt {
    return this[1].toBigInt();
  }

  get currencyIdSet(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get currencies(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class ConfigBuilder__finishRebalancingInputConfigStruct extends ethereum.Tuple {
  get shared(): ConfigBuilder__finishRebalancingInputConfigSharedStruct {
    return changetype<ConfigBuilder__finishRebalancingInputConfigSharedStruct>(
      this[0].toTuple()
    );
  }

  get deposit(): ConfigBuilder__finishRebalancingInputConfigDepositStruct {
    return changetype<ConfigBuilder__finishRebalancingInputConfigDepositStruct>(
      this[1].toTuple()
    );
  }

  get redemption(): ConfigBuilder__finishRebalancingInputConfigRedemptionStruct {
    return changetype<
      ConfigBuilder__finishRebalancingInputConfigRedemptionStruct
    >(this[2].toTuple());
  }
}

export class ConfigBuilder__finishRebalancingInputConfigSharedStruct extends ethereum.Tuple {
  get AUMDilutionPerSecond(): BigInt {
    return this[0].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[1].toBoolean();
  }

  get metadata(): Address {
    return this[2].toAddress();
  }
}

export class ConfigBuilder__finishRebalancingInputConfigDepositStruct extends ethereum.Tuple {
  get feeBPs(): i32 {
    return this[0].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[1].toBoolean();
  }
}

export class ConfigBuilder__finishRebalancingInputConfigRedemptionStruct extends ethereum.Tuple {
  get forwarder(): Address {
    return this[0].toAddress();
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class ConfigBuilder__getStateResultStateStruct extends ethereum.Tuple {
  get pendingChainCount(): i32 {
    return this[0].toI32();
  }

  get snapshotChainIndexSet(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get weights(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get chainIdSet(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get chainsHash(): Bytes {
    return this[4].toBytes();
  }

  get latestSnapshot(): BigInt {
    return this[5].toBigInt();
  }

  get staticPriceOracle(): Address {
    return this[6].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get chainStates(): Array<
    ConfigBuilder__getStateResultStateChainStatesStruct
  > {
    return this[8].toTupleArray<
      ConfigBuilder__getStateResultStateChainStatesStruct
    >();
  }

  get reserve(): Address {
    return this[9].toAddress();
  }
}

export class ConfigBuilder__getStateResultStateChainStatesStruct extends ethereum.Tuple {
  get currenciesHash(): Bytes {
    return this[0].toBytes();
  }

  get resultHash(): Bytes {
    return this[1].toBytes();
  }
}

export class ConfigBuilder__setConfigResultDepositStruct extends ethereum.Tuple {
  get shared(): ConfigBuilder__setConfigResultDepositSharedStruct {
    return changetype<ConfigBuilder__setConfigResultDepositSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class ConfigBuilder__setConfigResultDepositSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class ConfigBuilder__setConfigResultRedemptionStruct extends ethereum.Tuple {
  get shared(): ConfigBuilder__setConfigResultRedemptionSharedStruct {
    return changetype<ConfigBuilder__setConfigResultRedemptionSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }

  get forwarder(): Address {
    return this[3].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class ConfigBuilder__setConfigResultRedemptionSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class ConfigBuilder__setConfigResult {
  value0: ConfigBuilder__setConfigResultDepositStruct;
  value1: ConfigBuilder__setConfigResultRedemptionStruct;

  constructor(
    value0: ConfigBuilder__setConfigResultDepositStruct,
    value1: ConfigBuilder__setConfigResultRedemptionStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTuple(this.value0));
    map.set("value1", ethereum.Value.fromTuple(this.value1));
    return map;
  }

  getDeposit(): ConfigBuilder__setConfigResultDepositStruct {
    return this.value0;
  }

  getRedemption(): ConfigBuilder__setConfigResultRedemptionStruct {
    return this.value1;
  }
}

export class ConfigBuilder__setConfigInput_configStruct extends ethereum.Tuple {
  get shared(): ConfigBuilder__setConfigInput_configSharedStruct {
    return changetype<ConfigBuilder__setConfigInput_configSharedStruct>(
      this[0].toTuple()
    );
  }

  get deposit(): ConfigBuilder__setConfigInput_configDepositStruct {
    return changetype<ConfigBuilder__setConfigInput_configDepositStruct>(
      this[1].toTuple()
    );
  }

  get redemption(): ConfigBuilder__setConfigInput_configRedemptionStruct {
    return changetype<ConfigBuilder__setConfigInput_configRedemptionStruct>(
      this[2].toTuple()
    );
  }
}

export class ConfigBuilder__setConfigInput_configSharedStruct extends ethereum.Tuple {
  get AUMDilutionPerSecond(): BigInt {
    return this[0].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[1].toBoolean();
  }

  get metadata(): Address {
    return this[2].toAddress();
  }
}

export class ConfigBuilder__setConfigInput_configDepositStruct extends ethereum.Tuple {
  get feeBPs(): i32 {
    return this[0].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[1].toBoolean();
  }
}

export class ConfigBuilder__setConfigInput_configRedemptionStruct extends ethereum.Tuple {
  get forwarder(): Address {
    return this[0].toAddress();
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class ConfigBuilder extends ethereum.SmartContract {
  static bind(address: Address): ConfigBuilder {
    return new ConfigBuilder("ConfigBuilder", address);
  }

  anatomyHash(): Bytes {
    let result = super.call("anatomyHash", "anatomyHash():(bytes32)", []);

    return result[0].toBytes();
  }

  try_anatomyHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("anatomyHash", "anatomyHash():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  configHash(): Bytes {
    let result = super.call("configHash", "configHash():(bytes32)", []);

    return result[0].toBytes();
  }

  try_configHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("configHash", "configHash():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  configs(
    config: ConfigBuilder__configsInputConfigStruct
  ): ConfigBuilder__configsResult {
    let result = super.call(
      "configs",
      "configs(((uint256,bool,address),(uint16,bool),(address,uint16,bool))):(((uint256,uint256,bool,address,address),uint16,bool),((uint256,uint256,bool,address,address),uint16,bool,address,uint256[]))",
      [ethereum.Value.fromTuple(config)]
    );

    return changetype<ConfigBuilder__configsResult>(
      new ConfigBuilder__configsResult(
        changetype<ConfigBuilder__configsResultDepositStruct>(
          result[0].toTuple()
        ),
        changetype<ConfigBuilder__configsResultRedemptionStruct>(
          result[1].toTuple()
        )
      )
    );
  }

  try_configs(
    config: ConfigBuilder__configsInputConfigStruct
  ): ethereum.CallResult<ConfigBuilder__configsResult> {
    let result = super.tryCall(
      "configs",
      "configs(((uint256,bool,address),(uint16,bool),(address,uint16,bool))):(((uint256,uint256,bool,address,address),uint16,bool),((uint256,uint256,bool,address,address),uint16,bool,address,uint256[]))",
      [ethereum.Value.fromTuple(config)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ConfigBuilder__configsResult>(
        new ConfigBuilder__configsResult(
          changetype<ConfigBuilder__configsResultDepositStruct>(
            value[0].toTuple()
          ),
          changetype<ConfigBuilder__configsResultRedemptionStruct>(
            value[1].toTuple()
          )
        )
      )
    );
  }

  finishRebalancing(
    results: Array<ConfigBuilder__finishRebalancingInputResultsStruct>,
    config: ConfigBuilder__finishRebalancingInputConfigStruct
  ): ConfigBuilder__finishRebalancingResult {
    let result = super.call(
      "finishRebalancing",
      "finishRebalancing((uint256,uint256,uint256[],uint256[])[],((uint256,bool,address),(uint16,bool),(address,uint16,bool))):(((uint256,uint256,bool,address,address),uint16,bool),((uint256,uint256,bool,address,address),uint16,bool,address,uint256[]))",
      [ethereum.Value.fromTupleArray(results), ethereum.Value.fromTuple(config)]
    );

    return changetype<ConfigBuilder__finishRebalancingResult>(
      new ConfigBuilder__finishRebalancingResult(
        changetype<ConfigBuilder__finishRebalancingResultDepositStruct>(
          result[0].toTuple()
        ),
        changetype<ConfigBuilder__finishRebalancingResultRedemptionStruct>(
          result[1].toTuple()
        )
      )
    );
  }

  try_finishRebalancing(
    results: Array<ConfigBuilder__finishRebalancingInputResultsStruct>,
    config: ConfigBuilder__finishRebalancingInputConfigStruct
  ): ethereum.CallResult<ConfigBuilder__finishRebalancingResult> {
    let result = super.tryCall(
      "finishRebalancing",
      "finishRebalancing((uint256,uint256,uint256[],uint256[])[],((uint256,bool,address),(uint16,bool),(address,uint16,bool))):(((uint256,uint256,bool,address,address),uint16,bool),((uint256,uint256,bool,address,address),uint16,bool,address,uint256[]))",
      [ethereum.Value.fromTupleArray(results), ethereum.Value.fromTuple(config)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ConfigBuilder__finishRebalancingResult>(
        new ConfigBuilder__finishRebalancingResult(
          changetype<ConfigBuilder__finishRebalancingResultDepositStruct>(
            value[0].toTuple()
          ),
          changetype<ConfigBuilder__finishRebalancingResultRedemptionStruct>(
            value[1].toTuple()
          )
        )
      )
    );
  }

  getState(): ConfigBuilder__getStateResultStateStruct {
    let result = super.call(
      "getState",
      "getState():((uint8,uint256[],uint256[],uint256[],bytes32,uint256,address,uint256[],(bytes32,bytes32)[],address))",
      []
    );

    return changetype<ConfigBuilder__getStateResultStateStruct>(
      result[0].toTuple()
    );
  }

  try_getState(): ethereum.CallResult<
    ConfigBuilder__getStateResultStateStruct
  > {
    let result = super.tryCall(
      "getState",
      "getState():((uint8,uint256[],uint256[],uint256[],bytes32,uint256,address,uint256[],(bytes32,bytes32)[],address))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ConfigBuilder__getStateResultStateStruct>(value[0].toTuple())
    );
  }

  governance(): Address {
    let result = super.call("governance", "governance():(address)", []);

    return result[0].toAddress();
  }

  try_governance(): ethereum.CallResult<Address> {
    let result = super.tryCall("governance", "governance():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  index(): Address {
    let result = super.call("index", "index():(address)", []);

    return result[0].toAddress();
  }

  try_index(): ethereum.CallResult<Address> {
    let result = super.tryCall("index", "index():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  messenger(): Address {
    let result = super.call("messenger", "messenger():(address)", []);

    return result[0].toAddress();
  }

  try_messenger(): ethereum.CallResult<Address> {
    let result = super.tryCall("messenger", "messenger():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setConfig(
    _config: ConfigBuilder__setConfigInput_configStruct
  ): ConfigBuilder__setConfigResult {
    let result = super.call(
      "setConfig",
      "setConfig(((uint256,bool,address),(uint16,bool),(address,uint16,bool))):(((uint256,uint256,bool,address,address),uint16,bool),((uint256,uint256,bool,address,address),uint16,bool,address,uint256[]))",
      [ethereum.Value.fromTuple(_config)]
    );

    return changetype<ConfigBuilder__setConfigResult>(
      new ConfigBuilder__setConfigResult(
        changetype<ConfigBuilder__setConfigResultDepositStruct>(
          result[0].toTuple()
        ),
        changetype<ConfigBuilder__setConfigResultRedemptionStruct>(
          result[1].toTuple()
        )
      )
    );
  }

  try_setConfig(
    _config: ConfigBuilder__setConfigInput_configStruct
  ): ethereum.CallResult<ConfigBuilder__setConfigResult> {
    let result = super.tryCall(
      "setConfig",
      "setConfig(((uint256,bool,address),(uint16,bool),(address,uint16,bool))):(((uint256,uint256,bool,address,address),uint16,bool),((uint256,uint256,bool,address,address),uint16,bool,address,uint256[]))",
      [ethereum.Value.fromTuple(_config)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ConfigBuilder__setConfigResult>(
        new ConfigBuilder__setConfigResult(
          changetype<ConfigBuilder__setConfigResultDepositStruct>(
            value[0].toTuple()
          ),
          changetype<ConfigBuilder__setConfigResultRedemptionStruct>(
            value[1].toTuple()
          )
        )
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _governance(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _messenger(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _priceOracleDeployer(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _index(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ChainRebalancingFinishedCall extends ethereum.Call {
  get inputs(): ChainRebalancingFinishedCall__Inputs {
    return new ChainRebalancingFinishedCall__Inputs(this);
  }

  get outputs(): ChainRebalancingFinishedCall__Outputs {
    return new ChainRebalancingFinishedCall__Outputs(this);
  }
}

export class ChainRebalancingFinishedCall__Inputs {
  _call: ChainRebalancingFinishedCall;

  constructor(call: ChainRebalancingFinishedCall) {
    this._call = call;
  }

  get chainId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get resultHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class ChainRebalancingFinishedCall__Outputs {
  _call: ChainRebalancingFinishedCall;

  constructor(call: ChainRebalancingFinishedCall) {
    this._call = call;
  }
}

export class CurrenciesUpdatedCall extends ethereum.Call {
  get inputs(): CurrenciesUpdatedCall__Inputs {
    return new CurrenciesUpdatedCall__Inputs(this);
  }

  get outputs(): CurrenciesUpdatedCall__Outputs {
    return new CurrenciesUpdatedCall__Outputs(this);
  }
}

export class CurrenciesUpdatedCall__Inputs {
  _call: CurrenciesUpdatedCall;

  constructor(call: CurrenciesUpdatedCall) {
    this._call = call;
  }

  get result(): CurrenciesUpdatedCallResultStruct {
    return changetype<CurrenciesUpdatedCallResultStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class CurrenciesUpdatedCall__Outputs {
  _call: CurrenciesUpdatedCall;

  constructor(call: CurrenciesUpdatedCall) {
    this._call = call;
  }
}

export class CurrenciesUpdatedCallResultStruct extends ethereum.Tuple {
  get chainId(): BigInt {
    return this[0].toBigInt();
  }

  get metadata(): Array<CurrenciesUpdatedCallResultMetadataStruct> {
    return this[1].toTupleArray<CurrenciesUpdatedCallResultMetadataStruct>();
  }

  get currenciesHash(): Bytes {
    return this[2].toBytes();
  }
}

export class CurrenciesUpdatedCallResultMetadataStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get symbol(): string {
    return this[1].toString();
  }

  get currency(): Address {
    return this[2].toAddress();
  }

  get id(): BigInt {
    return this[3].toBigInt();
  }
}

export class FinishRebalancingCall extends ethereum.Call {
  get inputs(): FinishRebalancingCall__Inputs {
    return new FinishRebalancingCall__Inputs(this);
  }

  get outputs(): FinishRebalancingCall__Outputs {
    return new FinishRebalancingCall__Outputs(this);
  }
}

export class FinishRebalancingCall__Inputs {
  _call: FinishRebalancingCall;

  constructor(call: FinishRebalancingCall) {
    this._call = call;
  }

  get results(): Array<FinishRebalancingCallResultsStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      FinishRebalancingCallResultsStruct
    >();
  }

  get config(): FinishRebalancingCallConfigStruct {
    return changetype<FinishRebalancingCallConfigStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class FinishRebalancingCall__Outputs {
  _call: FinishRebalancingCall;

  constructor(call: FinishRebalancingCall) {
    this._call = call;
  }

  get deposit(): FinishRebalancingCallDepositStruct {
    return changetype<FinishRebalancingCallDepositStruct>(
      this._call.outputValues[0].value.toTuple()
    );
  }

  get redemption(): FinishRebalancingCallRedemptionStruct {
    return changetype<FinishRebalancingCallRedemptionStruct>(
      this._call.outputValues[1].value.toTuple()
    );
  }
}

export class FinishRebalancingCallResultsStruct extends ethereum.Tuple {
  get chainId(): BigInt {
    return this[0].toBigInt();
  }

  get snapshot(): BigInt {
    return this[1].toBigInt();
  }

  get currencyIdSet(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get currencies(): Array<BigInt> {
    return this[3].toBigIntArray();
  }
}

export class FinishRebalancingCallConfigStruct extends ethereum.Tuple {
  get shared(): FinishRebalancingCallConfigSharedStruct {
    return changetype<FinishRebalancingCallConfigSharedStruct>(
      this[0].toTuple()
    );
  }

  get deposit(): FinishRebalancingCallConfigDepositStruct {
    return changetype<FinishRebalancingCallConfigDepositStruct>(
      this[1].toTuple()
    );
  }

  get redemption(): FinishRebalancingCallConfigRedemptionStruct {
    return changetype<FinishRebalancingCallConfigRedemptionStruct>(
      this[2].toTuple()
    );
  }
}

export class FinishRebalancingCallConfigSharedStruct extends ethereum.Tuple {
  get AUMDilutionPerSecond(): BigInt {
    return this[0].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[1].toBoolean();
  }

  get metadata(): Address {
    return this[2].toAddress();
  }
}

export class FinishRebalancingCallConfigDepositStruct extends ethereum.Tuple {
  get feeBPs(): i32 {
    return this[0].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[1].toBoolean();
  }
}

export class FinishRebalancingCallConfigRedemptionStruct extends ethereum.Tuple {
  get forwarder(): Address {
    return this[0].toAddress();
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class FinishRebalancingCallDepositStruct extends ethereum.Tuple {
  get shared(): FinishRebalancingCallDepositSharedStruct {
    return changetype<FinishRebalancingCallDepositSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class FinishRebalancingCallDepositSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class FinishRebalancingCallRedemptionStruct extends ethereum.Tuple {
  get shared(): FinishRebalancingCallRedemptionSharedStruct {
    return changetype<FinishRebalancingCallRedemptionSharedStruct>(
      this[0].toTuple()
    );
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }

  get forwarder(): Address {
    return this[3].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class FinishRebalancingCallRedemptionSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class RegisterChainCall extends ethereum.Call {
  get inputs(): RegisterChainCall__Inputs {
    return new RegisterChainCall__Inputs(this);
  }

  get outputs(): RegisterChainCall__Outputs {
    return new RegisterChainCall__Outputs(this);
  }
}

export class RegisterChainCall__Inputs {
  _call: RegisterChainCall;

  constructor(call: RegisterChainCall) {
    this._call = call;
  }

  get chainId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RegisterChainCall__Outputs {
  _call: RegisterChainCall;

  constructor(call: RegisterChainCall) {
    this._call = call;
  }
}

export class SetConfigCall extends ethereum.Call {
  get inputs(): SetConfigCall__Inputs {
    return new SetConfigCall__Inputs(this);
  }

  get outputs(): SetConfigCall__Outputs {
    return new SetConfigCall__Outputs(this);
  }
}

export class SetConfigCall__Inputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get _config(): SetConfigCall_configStruct {
    return changetype<SetConfigCall_configStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetConfigCall__Outputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get deposit(): SetConfigCallDepositStruct {
    return changetype<SetConfigCallDepositStruct>(
      this._call.outputValues[0].value.toTuple()
    );
  }

  get redemption(): SetConfigCallRedemptionStruct {
    return changetype<SetConfigCallRedemptionStruct>(
      this._call.outputValues[1].value.toTuple()
    );
  }
}

export class SetConfigCall_configStruct extends ethereum.Tuple {
  get shared(): SetConfigCall_configSharedStruct {
    return changetype<SetConfigCall_configSharedStruct>(this[0].toTuple());
  }

  get deposit(): SetConfigCall_configDepositStruct {
    return changetype<SetConfigCall_configDepositStruct>(this[1].toTuple());
  }

  get redemption(): SetConfigCall_configRedemptionStruct {
    return changetype<SetConfigCall_configRedemptionStruct>(this[2].toTuple());
  }
}

export class SetConfigCall_configSharedStruct extends ethereum.Tuple {
  get AUMDilutionPerSecond(): BigInt {
    return this[0].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[1].toBoolean();
  }

  get metadata(): Address {
    return this[2].toAddress();
  }
}

export class SetConfigCall_configDepositStruct extends ethereum.Tuple {
  get feeBPs(): i32 {
    return this[0].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[1].toBoolean();
  }
}

export class SetConfigCall_configRedemptionStruct extends ethereum.Tuple {
  get forwarder(): Address {
    return this[0].toAddress();
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class SetConfigCallDepositStruct extends ethereum.Tuple {
  get shared(): SetConfigCallDepositSharedStruct {
    return changetype<SetConfigCallDepositSharedStruct>(this[0].toTuple());
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }
}

export class SetConfigCallDepositSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class SetConfigCallRedemptionStruct extends ethereum.Tuple {
  get shared(): SetConfigCallRedemptionSharedStruct {
    return changetype<SetConfigCallRedemptionSharedStruct>(this[0].toTuple());
  }

  get feeBPs(): i32 {
    return this[1].toI32();
  }

  get useCustomFeeCallback(): boolean {
    return this[2].toBoolean();
  }

  get forwarder(): Address {
    return this[3].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class SetConfigCallRedemptionSharedStruct extends ethereum.Tuple {
  get latestSnapshot(): BigInt {
    return this[0].toBigInt();
  }

  get AUMDilutionPerSecond(): BigInt {
    return this[1].toBigInt();
  }

  get useCustomAUMFee(): boolean {
    return this[2].toBoolean();
  }

  get staticPriceOracle(): Address {
    return this[3].toAddress();
  }

  get metadata(): Address {
    return this[4].toAddress();
  }
}

export class SetMessengerCall extends ethereum.Call {
  get inputs(): SetMessengerCall__Inputs {
    return new SetMessengerCall__Inputs(this);
  }

  get outputs(): SetMessengerCall__Outputs {
    return new SetMessengerCall__Outputs(this);
  }
}

export class SetMessengerCall__Inputs {
  _call: SetMessengerCall;

  constructor(call: SetMessengerCall) {
    this._call = call;
  }

  get _messenger(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetMessengerCall__Outputs {
  _call: SetMessengerCall;

  constructor(call: SetMessengerCall) {
    this._call = call;
  }
}

export class SetPriceOracleDeployerCall extends ethereum.Call {
  get inputs(): SetPriceOracleDeployerCall__Inputs {
    return new SetPriceOracleDeployerCall__Inputs(this);
  }

  get outputs(): SetPriceOracleDeployerCall__Outputs {
    return new SetPriceOracleDeployerCall__Outputs(this);
  }
}

export class SetPriceOracleDeployerCall__Inputs {
  _call: SetPriceOracleDeployerCall;

  constructor(call: SetPriceOracleDeployerCall) {
    this._call = call;
  }

  get _priceOracleDeployer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPriceOracleDeployerCall__Outputs {
  _call: SetPriceOracleDeployerCall;

  constructor(call: SetPriceOracleDeployerCall) {
    this._call = call;
  }
}

export class SetStateCall extends ethereum.Call {
  get inputs(): SetStateCall__Inputs {
    return new SetStateCall__Inputs(this);
  }

  get outputs(): SetStateCall__Outputs {
    return new SetStateCall__Outputs(this);
  }
}

export class SetStateCall__Inputs {
  _call: SetStateCall;

  constructor(call: SetStateCall) {
    this._call = call;
  }

  get value0(): SetStateCallValue0Struct {
    return changetype<SetStateCallValue0Struct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetStateCall__Outputs {
  _call: SetStateCall;

  constructor(call: SetStateCall) {
    this._call = call;
  }
}

export class SetStateCallValue0Struct extends ethereum.Tuple {
  get pendingChainCount(): i32 {
    return this[0].toI32();
  }

  get snapshotChainIndexSet(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get weights(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get chainIdSet(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get chainsHash(): Bytes {
    return this[4].toBytes();
  }

  get latestSnapshot(): BigInt {
    return this[5].toBigInt();
  }

  get staticPriceOracle(): Address {
    return this[6].toAddress();
  }

  get homeCurrencies(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get chainStates(): Array<SetStateCallValue0ChainStatesStruct> {
    return this[8].toTupleArray<SetStateCallValue0ChainStatesStruct>();
  }

  get reserve(): Address {
    return this[9].toAddress();
  }
}

export class SetStateCallValue0ChainStatesStruct extends ethereum.Tuple {
  get currenciesHash(): Bytes {
    return this[0].toBytes();
  }

  get resultHash(): Bytes {
    return this[1].toBytes();
  }
}

export class StartRebalancingCall extends ethereum.Call {
  get inputs(): StartRebalancingCall__Inputs {
    return new StartRebalancingCall__Inputs(this);
  }

  get outputs(): StartRebalancingCall__Outputs {
    return new StartRebalancingCall__Outputs(this);
  }
}

export class StartRebalancingCall__Inputs {
  _call: StartRebalancingCall;

  constructor(call: StartRebalancingCall) {
    this._call = call;
  }

  get params(): StartRebalancingCallParamsStruct {
    return changetype<StartRebalancingCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class StartRebalancingCall__Outputs {
  _call: StartRebalancingCall;

  constructor(call: StartRebalancingCall) {
    this._call = call;
  }
}

export class StartRebalancingCallParamsStruct extends ethereum.Tuple {
  get anatomy(): StartRebalancingCallParamsAnatomyStruct {
    return changetype<StartRebalancingCallParamsAnatomyStruct>(
      this[0].toTuple()
    );
  }

  get newAnatomy(): StartRebalancingCallParamsNewAnatomyStruct {
    return changetype<StartRebalancingCallParamsNewAnatomyStruct>(
      this[1].toTuple()
    );
  }

  get chainIds(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get currencies(): Array<Array<Address>> {
    return this[3].toAddressMatrix();
  }

  get newWeights(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get orderCreationParams(): StartRebalancingCallParamsOrderCreationParamsStruct {
    return changetype<StartRebalancingCallParamsOrderCreationParamsStruct>(
      this[5].toTuple()
    );
  }

  get payload(): Bytes {
    return this[6].toBytes();
  }
}

export class StartRebalancingCallParamsAnatomyStruct extends ethereum.Tuple {
  get chainIdSet(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get currencyIdSets(): Array<Array<BigInt>> {
    return this[1].toBigIntMatrix();
  }
}

export class StartRebalancingCallParamsNewAnatomyStruct extends ethereum.Tuple {
  get chainIdSet(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get currencyIdSets(): Array<Array<BigInt>> {
    return this[1].toBigIntMatrix();
  }
}

export class StartRebalancingCallParamsOrderCreationParamsStruct extends ethereum.Tuple {
  get sellDeltasMaxLength(): BigInt {
    return this[0].toBigInt();
  }

  get buyDeltasMaxLength(): BigInt {
    return this[1].toBigInt();
  }

  get orderCounts(): Array<BigInt> {
    return this[2].toBigIntArray();
  }
}

export class StartReserveRebalancingCall extends ethereum.Call {
  get inputs(): StartReserveRebalancingCall__Inputs {
    return new StartReserveRebalancingCall__Inputs(this);
  }

  get outputs(): StartReserveRebalancingCall__Outputs {
    return new StartReserveRebalancingCall__Outputs(this);
  }
}

export class StartReserveRebalancingCall__Inputs {
  _call: StartReserveRebalancingCall;

  constructor(call: StartReserveRebalancingCall) {
    this._call = call;
  }

  get params(): StartReserveRebalancingCallParamsStruct {
    return changetype<StartReserveRebalancingCallParamsStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class StartReserveRebalancingCall__Outputs {
  _call: StartReserveRebalancingCall;

  constructor(call: StartReserveRebalancingCall) {
    this._call = call;
  }
}

export class StartReserveRebalancingCallParamsStruct extends ethereum.Tuple {
  get anatomy(): StartReserveRebalancingCallParamsAnatomyStruct {
    return changetype<StartReserveRebalancingCallParamsAnatomyStruct>(
      this[0].toTuple()
    );
  }

  get chainIds(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get currencies(): Array<Array<Address>> {
    return this[2].toAddressMatrix();
  }
}

export class StartReserveRebalancingCallParamsAnatomyStruct extends ethereum.Tuple {
  get chainIdSet(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get currencyIdSets(): Array<Array<BigInt>> {
    return this[1].toBigIntMatrix();
  }
}
